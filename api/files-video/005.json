[{"tag":"p","inner":"Toda esta lógica la pueden encontrar acá en App.js, que es lo que estamos renderizando aquí en la raíz de nuestro documento."},{"tag":"javascript","inner":"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { useState } from \"react\";\nimport NewPost from \"./components/NewPost\";\nimport Post from \"./components/Post\";\nimport Posts from \"./components/Posts\";\n\nexport default function App() {\n  const [postId, setPostId] = useState(-1);\n\n  return (\n    <main className=\"container\">\n      <h1 className=\"mb-4\">React-Query Demo</h1>\n      {postId > -1 && (\n        <div>\n          <a onClick={() => setPostId(-1)} href=\"#\">\n            Back\n          </a>\n        </div>\n      )}\n      {postId > -1 ? (\n        <Post postId={postId} setPostId={setPostId} />\n      ) : (\n        <div className=\"row gap-4\">\n          {/* <div className=\"col-md\">\n            <NewPost />\n          </div> */}\n          <div className=\"col-md\">\n            <Posts setPostId={setPostId} />\n          </div>\n        </div>\n      )}\n    </main>\n  );\n}","lineNumber":"1"},{"tag":"p","inner":"En este App.js, simplemente lo que hago es, si tenemos un post seleccionado, cargamos el componente Post, y si no, cargamos el componente Posts en plural. ","lineNumber":"1"},{"tag":"p","inner":"El estado de post. Esto… ustedes podrían haber hecho un routing o algo más sofisticado, pero de esta manera, un poco simple, podemos ver  por lo menos este ejemplo.","lineNumber":"1"}]