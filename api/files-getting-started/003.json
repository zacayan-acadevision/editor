[{"tag":"p","inner":"Este ejemplo ilustra muy brevemente los 3 conceptos básicos de React Query:"},{"tag":"md","inner":"- Consultas\n- Mutaciones\n- Invalidación de consultas\n"},{"tag":"gdscript","inner":"import {\n   useQuery,\n   useMutation,\n   useQueryClient,\n   QueryClient,\n   QueryClientProvider,\n } from 'react-query'\n import { getTodos, postTodo } from '../my-api'\n \n // Create a client\n const queryClient = new QueryClient()\n \n function App() {\n   return (\n     // Provide the client to your App\n     <QueryClientProvider client={queryClient}>\n       <Todos />\n     </QueryClientProvider>\n   )\n }\n \n function Todos() {\n   // Access the client\n   const queryClient = useQueryClient()\n \n   // Queries\n   const query = useQuery('todos', getTodos)\n \n   // Mutations\n   const mutation = useMutation(postTodo, {\n     onSuccess: () => {\n       // Invalidate and refetch\n       queryClient.invalidateQueries('todos')\n     },\n   })\n \n   return (\n     <div>\n       <ul>\n         {query.data.map(todo => (\n           <li key={todo.id}>{todo.title}</li>\n         ))}\n       </ul>\n \n       <button\n         onClick={() => {\n           mutation.mutate({\n             id: Date.now(),\n             title: 'Do Laundry',\n           })\n         }}\n       >\n         Add Todo\n       </button>\n     </div>\n   )\n }\n \n render(<App />, document.getElementById('root'))\n"},{"tag":"p","inner":"Estos tres conceptos constituyen la mayor parte de la funcionalidad principal de React Query. Las siguientes secciones de la documentación repasarán cada uno de estos conceptos básicos con gran detalle.\n"}]