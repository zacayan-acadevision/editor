[{"tag":"h1","inner":"Función de consulta predeterminada\n"},{"tag":"md","inner":"Si desea por cualquier razón poder compartir la misma función de consulta para toda su aplicación y simplemente usar claves de consulta para identificar lo que debe obtener, puede hacerlo proporcionando **una función de consulta predeterminada** a React Query:\n"},{"tag":"html","inner":"1 // Define a default query function that will receive the query key\n2 // the queryKey is guaranteed to be an Array here\n3 const defaultQueryFn = async ({ queryKey }) => {\n4  const { data } = await axios.get(`https://jsonplaceholder.typicode.com${queryKey[0]}`);\n5  return data;\n6 };\n7\n8 // provide the default query function to your app with defaultOptions\n9 const queryClient = new QueryClient({\n10  defaultOptions: {\n11    queries: {\n12      queryFn: defaultQueryFn,\n13    },\n14  },\n15 })\n16\n17 function App() {\n18  return (\n19    <QueryClientProvider client={queryClient}>\n20      <YourApp />\n21    </QueryClientProvider>\n22  )\n23 }\n24\n25 // All you have to do now is pass a key!\n26 function Posts() {\n27  const { status, data, error, isFetching } = useQuery('/posts')\n28\n29  // ...\n30 }\n31\n32 // You can even leave out the queryFn and just go straight into options\n33 function Post({ postId }) {\n34  const { status, data, error, isFetching } = useQuery(`/posts/${postId}`, {\n35    enabled: !!postId,\n36  })\n37\n38  // ...\n39 }\n"},{"tag":"md","inner":"Si alguna vez desea anular la consulta predeterminadaFn, puede proporcionar la suya propia como lo haría normalmente.\n\n"}]