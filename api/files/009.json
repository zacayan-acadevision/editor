[{"tag":"h1","inner":"Deshabilitar/pausar consultas"},{"tag":"p","inner":"Si alguna vez desea deshabilitar una consulta para que no se ejecute automáticamente, puede usar la opción. (enabled = false)"},{"tag":"p","inner":"Cuando es : (enabled , false)"},{"tag":"md","inner":"- Si la consulta tiene datos almacenados en caché\n  - La consulta se inicializará en el estado o (.status === 'success' , isSuccess)\n- Si la consulta no tiene datos almacenados en caché\n - La consulta se iniciará en el estado (o.status === 'idle', isIdle)\n- La consulta no se recuperará automáticamente en el montaje.\n- La consulta no se volverá a obtener automáticamente en segundo plano cuando se monten nuevas instancias o aparezcan nuevas instancias\n- La consulta omitirá el cliente de consulta y las llamadas que normalmente provocarían la recuperación de la consulta. (invalidateQueries , refetchQueries)\n- (refetch) se puede usar para desencadenar manualmente la consulta que se va a buscar.\n"},{"tag":"gdscript","inner":"1 function Todos() {\n2  const {\n3    isIdle,\n4    isLoading,\n5    isError,\n6    data,\n7    error,\n8    refetch,\n9    isFetching,\n10  } = useQuery('todos', fetchTodoList, {\n11    enabled: false,\n12  })\n13\n14  return (\n15    <>\n16      <button onClick={() => refetch()}>Fetch Todos</button>\n17\n18      {isIdle ? (\n19        'Not ready...'\n20      ) : isLoading ? (\n21        <span>Loading...</span>\n22      ) : isError ? (\n23        <span>Error: {error.message}</span>\n24      ) : (\n25        <>\n26          <ul>\n27            {data.map(todo => (\n28              <li key={todo.id}>{todo.title}</li>\n29            ))}\n30          </ul>\n31          <div>{isFetching ? 'Fetching...' : null}</div>\n32        </>\n33      )}\n34    </>\n35  )\n36 }\n"}]