[{"tag":"h1","inner":"Indicadores de recuperación en segundo plano"},{"tag":"p","inner":"El estado de una consulta es suficiente para mostrar el estado inicial de carga dura de una consulta, pero a veces es posible que desee mostrar un indicador adicional de que una consulta se está recuperando en segundo plano. Para ello, las consultas también le proporcionan un booleano que puede usar para mostrar que está en un estado de recuperación, independientemente del estado de la variable: (status === 'loading' , isFetching , status)"},{"tag":"gdscript","inner":"1 function Todos() {\n2  const { status, data: todos, error, isFetching } = useQuery(\n3    'todos',\n4    fetchTodos\n5  )\n6\n7  return status === 'loading' ? (\n8    <span>Loading...</span>\n9  ) : status === 'error' ? (\n10    <span>Error: {error.message}</span>\n11  ) : (\n12    <>\n13      {isFetching ? <div>Refreshing...</div> : null}\n14\n15      <div>\n16        {todos.map(todo => (\n17          <Todo todo={todo} />\n18        ))}\n19      </div>\n20    </>\n21  )\n22 }\n"},{"tag":"h1","inner":"Visualización del estado de carga de recuperación de fondo global"},{"tag":"md","inner":"Además de los estados de carga de consultas individuales, si desea mostrar un indicador de carga global cuando **se obtienen consultas** (incluso en segundo plano), puede usar el gancho: (useIsFetching)"},{"tag":"gdscript","inner":"1 import { useIsFetching } from 'react-query'\n2\n3 function GlobalLoadingIndicator() {\n4  const isFetching = useIsFetching()\n5\n6  return isFetching ? (\n7    <div>Queries are fetching in the background...</div>\n8  ) : null\n9 }"}]