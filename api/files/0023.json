[{"tag":"h1","inner":"Filtros"},{"tag":"md","inner":"Algunos métodos de React Query aceptan un objeto **or. QueryFilters , MutationFilters**\n"},{"tag":"h2","inner":"Query Filters"},{"tag":"p","inner":"Un filtro de consulta es un objeto con ciertas condiciones para hacer coincidir una consulta con:"},{"tag":"gdscript","inner":"1 // Cancel all queries\n2 await queryClient.cancelQueries()\n3\n4 // Remove all inactive queries that begin with `posts` in the key\n5 queryClient.removeQueries('posts', { inactive: true })\n6\n7 // Refetch all active queries\n8 await queryClient.refetchQueries({ active: true })\n9\n10 // Refetch all active queries that begin with `posts` in the key\n11 await queryClient.refetchQueries('posts', { active: true })"},{"tag":"p","inner":"Un objeto de filtro de consulta admite las siguientes propiedades:"},{"tag":"md","inner":"- exact?: boolean\n - Si no desea buscar consultas de forma inclusiva por clave de consulta, puede pasar la opción de devolver solo la consulta con la clave de consulta exacta que ha pasado. exact: true\n- active?: boolean\n - Cuando se establece en él, coincidirá con las \n - Consultas activas.**true**\n - Cuando se establece en él, coincidirá con las \n -Consultas inactivas. **false**\n- inactive?: boolean\n - Cuando se establece en él, coincidirá con las \n - Consultas inactivas. true\n - Cuando se establece en él, coincidirá con las \n - Consultas activas. **false**\n- stale?: boolean\n - Cuando se establece en él, coincidirá con las \n - Consultas obsoletas. **true**\n - Cuando se establece en él, coincidirá con las \n - Consultas nuevas. false\n- fetching?: boolean\n - Cuando se establece en él, coincidirá con las \n consultas que se están obteniendo actualmente. **true**\n - Cuando se establece en él, coincidirá con las consultas que no se están obteniendo. **false\n- predicate?: (query: Query) => boolean**\n - Se llamará a esta función de predicado para cada consulta en la memoria caché y se espera que devuelva truthy para las consultas que son . **found**\n- queryKey?: QueryKey\n - Establezca esta propiedad para definir una clave de consulta con la que coincida.\n\n"},{"tag":"h2","inner":"Mutation Filters\n\n"},{"tag":"p","inner":"Un filtro de mutación es un objeto con ciertas condiciones para hacer coincidir una mutación con:"},{"tag":"gdscript","inner":"1 // Get the number of all fetching mutations\n2 await queryClient.isMutating()\n3\n4 // Filter mutations by mutationKey\n5 await queryClient.isMutating({ mutationKey: \"post\" })\n6\n7 // Filter mutations using a predicate function\n8 await queryClient.isMutating({ predicate: (mutation) => mutation.options.variables?.id === 1 })"},{"tag":"p","inner":"Un objeto de filtro de mutación admite las siguientes propiedades:"},{"tag":"md","inner":"- exact?: boolean\n - Si no desea buscar mutaciones inclusive por clave de mutación, puede pasar la opción de devolver solo la mutación con la clave de mutación exacta que ha pasado.exact: true\n- fetching?: boolean\n - Cuando se establece en él, coincidirá con las mutaciones que se están obteniendo actualmente. true\n - Cuando se establece en él, coincidirá con las mutaciones que no se están obteniendo. false\n- predicate?: (mutation: Mutation) => boolean\n - Se llamará a esta función de predicado para cada mutación en la caché y se espera que vuelva a ser veraz para las mutaciones que son . found\n- mutationKey?: MutationKey\n - Esta propiedad para definir una clave de mutación para que coincida.\n"}]